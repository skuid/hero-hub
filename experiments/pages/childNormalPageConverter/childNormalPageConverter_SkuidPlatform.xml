<skuidpage unsavedchangeswarning="yes" personalizationmode="server" showsidebar="true" showheader="true">
	<models>
		<model id="pages" query="true" processonclient="true" type="readwrite" datasource="SkuidLocal" label="Page" labelplural="Pages" namefield="name" uniqueId="sk-3dKp-1466">
			<fields uniqueId="sk-3dKp-1472">
				<field id="api_version" label="Skuid API Version" displaytype="TEXT" uniqueId="sk-3dKp-1473"/>
				<field id="id" label="Id" readonly="true" displaytype="TEXT" uniqueId="sk-3dKp-1474"/>
				<field id="name" label="Name" displaytype="TEXT" length="255" required="true" uniqueId="sk-3dKp-1475"/>
				<field id="is_master_page" label="Is Master Page" displaytype="BOOLEAN" uniqueId="sk-3dKp-1476"/>
				<field id="master_page_id" label="Master Page" displaytype="TEXT" accessible="true" filterable="true" digits="" uniqueId="sk-3dKp-1480"/>
				<field id="content" label="Content" ispolymorphic="false" isnamepointing="false" displaytype="STRING" accessible="true" filterable="true"/>
			</fields>
			<idfields>
				<field>id</field>
			</idfields>
			<conditions logic="" uniqueId="sk-3dKp-1484">
				<condition type="fieldvalue" value="" enclosevalueinquotes="true" sourcetype="param" sourceparam="is_master_page" state="filterableoff" inactive="true" name="is_master_page"/>
			</conditions>
			<actions uniqueId="sk-3dKp-1485"/>
			<methods uniqueId="sk-3dKp-1467">
				<method type="query" verb="GET" uniqueId="sk-3dKp-1468" payloadcontenttype="JSON" limitmethod="simple" simplerecordslimitparameter="limit" limit="20" paginationmethod="simple" offsetparameter="offset" endpoint="/objects/page"/>
				<method type="insert" verb="POST" successif="requestsucceeds" sendchanges="asjsoninbody" insertresponse="recordinbody" endpoint="/objects/page" uniqueId="sk-3dKp-1469"/>
				<method type="update" verb="PATCH" successif="requestsucceeds" sendchanges="asjsoninbody" endpoint="/objects/page/{{id}}" uniqueId="sk-3dKp-1470"/>
				<method type="delete" verb="DELETE" endpoint="/objects/page/{{id}}" successif="requestsucceeds" uniqueId="sk-3dKp-1471"/>
			</methods>
		</model>
		<model id="variableStore" query="true" createrowifnonefound="false" datasource="Ui-Only" processonclient="true">
			<fields>
				<field id="oldContent" displaytype="TEXT" length="255" defaultvaluetype="fieldvalue" label="Old XML" helptext="This XML is going to be converted."/>
				<field id="newContent" displaytype="TEXT" length="255" defaultvaluetype="fieldvalue" label="New XML" helptext="This XML has been converted into the page type you've selected" placeholder="This content will be generated by the conversion."/>
				<field id="masterPageId" displaytype="TEXT" length="255" label="Master Page ID" helptext="The ID of the master page you wish to link this page to. "/>
				<field id="masterPageContent" displaytype="TEXT" length="255" label="Master Page XML" helptext="Enter the XML of the master page you'll be linking the child page to."/>
				<field id="masterPageName" displaytype="TEXT" length="255" label="masterPageName"/>
				<field id="newName" displaytype="TEXT" length="255" label="Name"/>
			</fields>
			<conditions/>
			<actions/>
		</model>
		<model id="masterPages" query="true" processonclient="true" type="readwrite" datasource="SkuidLocal" label="Page" labelplural="Pages" namefield="name" uniqueId="sk-3dKp-1466">
			<fields uniqueId="sk-3dKp-1472">
				<field id="id" label="Id" readonly="true" displaytype="TEXT" uniqueId="sk-3dKp-1474"/>
				<field id="name" label="Name" displaytype="TEXT" length="255" required="true" uniqueId="sk-3dKp-1475"/>
				<field id="content" label="Content" ispolymorphic="false" isnamepointing="false" displaytype="STRING" accessible="true" filterable="true"/>
			</fields>
			<idfields>
				<field>id</field>
			</idfields>
			<conditions logic="" uniqueId="sk-3dKp-1484">
				<condition type="fieldvalue" value="" enclosevalueinquotes="true" sourcetype="param" sourceparam="is_master_page" state="filterableoff" inactive="true" name="is_master_page"/>
			</conditions>
			<actions uniqueId="sk-3dKp-1485"/>
			<methods uniqueId="sk-3dKp-1467">
				<method type="query" verb="GET" uniqueId="sk-3dKp-1468" payloadcontenttype="JSON" limitmethod="simple" simplerecordslimitparameter="limit" limit="20" paginationmethod="simple" offsetparameter="offset" endpoint="/objects/page?&amp;where={&quot;is_master_page&quot;:&quot;true&quot;}"/>
			</methods>
		</model>
	</models>
	<components>
		<tabset rememberlastusertab="true" defertabrendering="true" uniqueid="sk-3Px3-490">
			<tabs>
				<tab name="Pages List">
					<components>
						<skootable showconditions="true" showsavecancel="true" showerrorsinline="true" searchmethod="server" searchbox="true" showexportbuttons="false" hideheader="false" hidefooter="false" pagesize="10" alwaysresetpagination="false" createrecords="true" model="pages" buttonposition="" mode="read" allowcolumnreordering="true" responsive="true" uniqueid="sk-3PxA-602">
							<fields>
								<field id="api_version" uniqueid="fi-3PxA-603"/>
								<field id="name" uniqueid="fi-3PxA-605"/>
								<field id="is_master_page" uniqueid="fi-3PxA-606"/>
								<field id="master_page_id" uniqueid="fi-3PxA-607">
									<renderconditions logictype="and" onhidedatabehavior="keep"/>
									<enableconditions/>
								</field>
							</fields>
							<rowactions>
								<action type="delete"/>
								<action type="multi" label="Convert to normal page" icon="sk-icon-escalate">
									<actions>
										<action type="action-sequence" action-sequence-id="25e9872b-0c61-4447-81f4-4325508f5578"/>
										<action type="createRow" model="variableStore" appendorprepend="prepend" defaultmodefornewitems="edit" affectedrows="context">
											<defaults>
												<default valuesource="fieldvalue" field="oldContent" enclosevalueinquotes="true" value="{{content}}"/>
												<default valuesource="fieldvalue" field="newName" enclosevalueinquotes="true" value="{{name}}-Emancipated"/>
											</defaults>
										</action>
										<action type="custom" snippet="childPageToNormalPage">
											<onerroractions>
												<action type="blockUI" message="There was an error" timeout="3000"/>
											</onerroractions>
										</action>
										<action type="action-sequence" action-sequence-id="08bc0954-07ab-4042-93dd-f4b3266dbdf3"/>
									</actions>
									<renderconditions logictype="and">
										<rendercondition type="blank" operator="!=" fieldmodel="pages" sourcetype="fieldvalue" field="master_page_id" fieldtargetobjects="SkuidLocal" value="null" enclosevalueinquotes="false"/>
									</renderconditions>
								</action>
								<action type="multi" label="Convert to child page" icon="sk-icon-remove-reference">
									<actions>
										<action type="action-sequence" action-sequence-id="25e9872b-0c61-4447-81f4-4325508f5578"/>
										<action type="createRow" model="variableStore" appendorprepend="prepend" defaultmodefornewitems="edit" affectedrows="context">
											<defaults>
												<default valuesource="fieldvalue" field="oldContent" enclosevalueinquotes="true" value="{{content}}"/>
												<default valuesource="fieldvalue" field="newName" enclosevalueinquotes="true" value="{{name}}"/>
											</defaults>
										</action>
										<action type="action-sequence" action-sequence-id="3fd5a006-aecc-4f5a-88bc-0f21be565b1e"/>
									</actions>
									<renderconditions logictype="and">
										<rendercondition type="blank" fieldmodel="pages" sourcetype="fieldvalue" fieldtargetobjects="SkuidLocal" enclosevalueinquotes="false" sourceproperty="isNew" operator="=" field="master_page_id"/>
										<rendercondition type="fieldvalue" operator="!=" enclosevalueinquotes="false" fieldmodel="pages" sourcetype="fieldvalue" field="is_master_page" fieldtargetobjects="SkuidLocal" value="true"/>
									</renderconditions>
								</action>
							</rowactions>
							<massactions usefirstitemasdefault="true">
								<action type="massupdate"/>
								<action type="massdelete"/>
							</massactions>
							<views>
								<view type="standard"/>
							</views>
							<actions defaultlabel="Global Actions" defaulticon="sk-icon-magic" usefirstitemasdefault="true"/>
							<filters/>
						</skootable>
					</components>
				</tab>
			</tabs>
		</tabset>
	</components>
	<resources>
		<labels/>
		<javascript>
			<jsitem location="inlinesnippet" cachelocation="false" name="childPageToNormalPage">// childPageToNormalPage
console.log('Starting conversion')
// Skuid variables
var variableStore = skuid.$M('variableStore')
var r = variableStore.getFirstRow()
var oldContent = r.oldContent

// Handle the XML
var parser = new DOMParser();
var xmlDoc = parser.parseFromString(oldContent, "text/xml");

// Now get all the old components into an array
pageRegions = Array.prototype.slice.call(xmlDoc.getElementsByTagName('pageregioncontent'))
components = []
pageRegions.forEach(function(region){
    if (region.children[0]) {
        for (let component of region.children[0].children) {
            components.push(component)}
    } else
    {
        console.log('Page region has no components, moving on.')
    }
})

// Collate all the components into a new node on the new page
var newComponentsNode = xmlDoc.createElement("components");
components.forEach(function(c){
  newComponentsNode.append(c)
})

// Remove the page regions node
var skuidPage = xmlDoc.getElementsByTagName('skuidpage')[0]
var pageRegionContents = xmlDoc.getElementsByTagName('pageregioncontents')[0]
skuidPage.removeChild(pageRegionContents)

// Move the components node beneath models node
xmlDoc.getElementsByTagName('models')[0].after(newComponentsNode)
// Stringify the XML and update the model row
var oSerializer = new XMLSerializer();
var sXML = oSerializer.serializeToString(xmlDoc);
variableStore.updateRow(r,{newContent: sXML})</jsitem>
			<jsitem location="inlinesnippet" name="normalPageToChildPage" cachelocation="false">// normalPageToChildPage
console.log('Starting conversion')  
// Skuid variables  
var pagesModel = skuid.$M('pages')
var variableStore = skuid.$M('variableStore')
var r = variableStore.getFirstRow()
var oldContent = r.oldContent
var masterPage = r.masterPageContent

// Handle the XML
var parser = new DOMParser();
var masterPageXml = parser.parseFromString(masterPage, "text/xml");
var xmlDoc = parser.parseFromString(oldContent, "text/xml");
var skuidPage = xmlDoc.getElementsByTagName('skuidpage')[0]

// Get all page region areas in master page
var pageRegionAreas = Array.prototype.slice.call(masterPageXml.getElementsByTagName('pageregion'))

if (pageRegionAreas.length === 0) {
  throw ("The chosen master page has no page regions. Please update the page and try again.")
} else {
  // Create pageregionscontents node to nest all pageregioncontent nodes
  var pageregioncontents = xmlDoc.createElement("pageregioncontents");
  xmlDoc.getElementsByTagName('models')[0].after(pageregioncontents)

  // Parse existing page regions, and create nodes for child page
  pageRegionAreas.forEach(function (pra) {
    var regionid = pra.getAttribute('uniqueid')
    newPageRegion = xmlDoc.createElement("pageregioncontent");
    newPageRegion.setAttribute("regionid", regionid)
    newPageRegion.setAttribute('uniqueid', skuid.utils.generateUniqueId())
    pageregioncontents.append(newPageRegion)
  })

  // Now get all the old components into an array
  components = []
  var arrayOfComponentNodes = Array.prototype.slice.call(xmlDoc.getElementsByTagName('components'))
  arrayOfComponentNodes.forEach(function (cn) {
    if (cn.parentElement == skuidPage){
      arrayOfComponents = Array.prototype.slice.call(cn.children)
      arrayOfComponents.forEach(function (c) {
        components.push(c)
      })
    }
  })

  // Collate all the components into a new node on the new page
  var newComponentsNode = xmlDoc.createElement("components");
  components.forEach(function (c) {
    newComponentsNode.append(c)
  })

  // Clean up the nodes
  arrayOfComponentNodes.forEach(function (ocn) {
    if (ocn.parentElement == skuidPage) {
      skuidPage.removeChild(ocn)
    }
  })

  // Move the components node beneath models node
  xmlDoc.getElementsByTagName('pageregioncontent')[0].append(newComponentsNode)

  // Stringify the XML and update the model row
  var oSerializer = new XMLSerializer();
  var sXML = oSerializer.serializeToString(xmlDoc);
  variableStore.updateRow(r, { newContent: sXML })
}</jsitem>
		</javascript>
		<css/>
		<actionsequences uniqueid="sk-3P_R-725">
			<actionsequence id="8dabbb26-bf41-4f73-97b0-ef87a3d05ca9" label="createNewPageFromConvertedContent" type="reusable" uniqueid="sk-3P_R-726">
				<description>Uses the currently stored name and content variables to create a new row on the pages model and save it. If the variable store has a master page ID, we're trying to save a new child page, so there's a branch to account for that.</description>
				<actions>
					<action type="createRow" model="pages" appendorprepend="prepend" defaultmodefornewitems="edit" affectedrows="context">
						<defaults>
							<default valuesource="fieldvalue" field="name" enclosevalueinquotes="true" value="{{$Model.variableStore.data.0.newName}}"/>
							<default valuesource="fieldvalue" field="content" enclosevalueinquotes="true" value="{{$Model.variableStore.data.0.newContent}}"/>
						</defaults>
					</action>
					<action type="branch" whenfinished="continue" model="variableStore">
						<formula>{{masterPageId}}</formula>
						<iftrueactions>
							<action type="updateRow" fieldmodel="pages" affectedrows="context">
								<updates>
									<update valuesource="fieldvalue" field="master_page_id" enclosevalueinquotes="true" value="{{$Model.variableStore.data.0.masterPageId}}"/>
								</updates>
							</action>
						</iftrueactions>
					</action>
					<action type="save" rollbackonanyerror="true">
						<models>
							<model>pages</model>
						</models>
						<onerroractions>
							<action type="cancel" message="There was an error" timeout="3000">
								<models>
									<model>pages</model>
								</models>
							</action>
						</onerroractions>
					</action>
					<action type="action-sequence" action-sequence-id="25e9872b-0c61-4447-81f4-4325508f5578"/>
					<action type="save"/>
				</actions>
				<inputs/>
			</actionsequence>
			<actionsequence id="3fd5a006-aecc-4f5a-88bc-0f21be565b1e" label="showMasterPageList" type="reusable" uniqueid="sk-3Tqu-4752">
				<description>This popup allows users to pick a master page for normal-page-to-child-page conversion. The selected page is sent to the variable store.</description>
				<actions>
					<action type="showPopup">
						<popup title="Master page" width="90%">
							<components>
								<template multiple="false" uniqueid="sk-3Us7-5276">
									<contents>Which master page would you like to use?</contents>
								</template>
								<skootable showconditions="true" showsavecancel="false" showerrorsinline="true" searchmethod="server" searchbox="true" showexportbuttons="false" hideheader="false" hidefooter="false" pagesize="10" alwaysresetpagination="false" createrecords="true" model="masterPages" buttonposition="" mode="read" allowcolumnreordering="true" responsive="true" uniqueid="sk-3TiA-1666">
									<fields>
										<field id="name" hideable="true" uniqueid="fi-3TiC-1687"/>
									</fields>
									<rowactions>
										<action type="multi" label="Use as master page" icon="sk-icon-magic">
											<actions>
												<action type="updateRow" model="variableStore" appendorprepend="prepend" defaultmodefornewitems="edit" affectedrows="context" fieldmodel="variableStore">
													<defaults>
														<default valuesource="fieldvalue" field="masterPageId" enclosevalueinquotes="true" value="{{id}}"/>
														<default valuesource="fieldvalue" field="masterPageContent" enclosevalueinquotes="true" value="{{content}}"/>
													</defaults>
													<updates>
														<update valuesource="fieldvalue" field="masterPageId" enclosevalueinquotes="true" value="{{id}}"/>
														<update valuesource="fieldvalue" field="masterPageContent" enclosevalueinquotes="true" value="{{content}}"/>
														<update valuesource="fieldvalue" field="masterPageName" enclosevalueinquotes="true" value="{{name}}"/>
														<update valuesource="fieldvalue" value="{{name}}_{{$Model.variableStore.data.0.newName}}" field="newName" enclosevalueinquotes="true"/>
													</updates>
												</action>
												<action type="closeAllPopups"/>
												<action type="custom" snippet="normalPageToChildPage"/>
												<action type="action-sequence" action-sequence-id="08bc0954-07ab-4042-93dd-f4b3266dbdf3">
													<inputs>
														<input name="newPageName" value="{{$Model.variableStore.data.0.masterPageName}}-{{name}}"/>
													</inputs>
												</action>
											</actions>
										</action>
									</rowactions>
									<massactions usefirstitemasdefault="true"/>
									<views>
										<view type="standard"/>
									</views>
								</skootable>
							</components>
						</popup>
					</action>
				</actions>
			</actionsequence>
			<actionsequence id="25e9872b-0c61-4447-81f4-4325508f5578" label="clearVariableStore" type="reusable" uniqueid="sk-3Tqu-4753">
				<description>An easy to remember action to clearing the variable store to ensure we always only have one row.</description>
				<actions>
					<action type="emptyModelData">
						<models>
							<model>variableStore</model>
						</models>
					</action>
				</actions>
			</actionsequence>
			<actionsequence id="08bc0954-07ab-4042-93dd-f4b3266dbdf3" label="promptForName" type="reusable" uniqueid="sk-3V4t-2676">
				<description>Prompts the user for the name of their converted page. Uses the variable store and calls the createNewPageFromConvertedContent action sequence. Name defaults are set in the row actions.</description>
				<actions>
					<action type="showPopup">
						<popup title="Page" width="90%">
							<components>
								<template multiple="false" uniqueid="sk-3Uno-3087">
									<contents>What would you like to name the name page?</contents>
								</template>
								<basicfieldeditor showheader="true" showsavecancel="false" showerrorsinline="true" model="variableStore" uniqueid="sk-3Unk-3049" mode="read">
									<columns>
										<column width="100%" uniqueid="sk-3Unk-3045">
											<sections>
												<section title="Section A" uniqueid="sk-3Unk-3046" collapsible="no" showheader="false">
													<fields>
														<field uniqueid="sk-3Unn-3082" id="newName"/>
													</fields>
												</section>
											</sections>
										</column>
									</columns>
								</basicfieldeditor>
								<buttonset model="variableStore" uniqueid="sk-3UoV-4666">
									<buttons>
										<button type="multi" label="Save" uniqueid="sk-3UoV-4671">
											<actions>
												<action type="action-sequence" action-sequence-id="8dabbb26-bf41-4f73-97b0-ef87a3d05ca9"/>
												<action type="closeAllPopups"/>
											</actions>
										</button>
										<button type="multi" label="Cancel" uniqueid="sk-3UoV-4675">
											<actions>
												<action type="action-sequence" action-sequence-id="25e9872b-0c61-4447-81f4-4325508f5578"/>
												<action type="closeAllPopups"/>
											</actions>
										</button>
									</buttons>
								</buttonset>
							</components>
						</popup>
					</action>
				</actions>
			</actionsequence>
		</actionsequences>
	</resources>
	<styles>
		<styleitem type="background" bgtype="none"/>
	</styles>
</skuidpage>